{"version":3,"sources":["./src/environments/environment.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/classes/latlng.ts","./src/app/app.module.ts","./src/app/components/childs/childs.component.ts","./src/app/components/childs/childs.component.html","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent {\n  title = 'googlemaps';\n}\n","\n<app-childs></app-childs>\n","export class Latlng {\n  lat:number;\n  lng:number;\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { AppComponent } from './app.component';\nimport { ChildsComponent } from './components/childs/childs.component';\n@NgModule({\n  declarations: [\n    AppComponent,\n    ChildsComponent\n  ],\n  imports: [\n    BrowserModule,\n\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {Component, OnInit} from '@angular/core';\nimport * as shpjs from \"shpjs\";\nimport {Latlng} from '../../classes/latlng';\nimport Polyline = google.maps.Polyline;\n// import shp from 'shpjs';\n\n@Component({\n  selector: 'app-childs',\n  templateUrl: './childs.component.html',\n  styleUrls: ['./childs.component.scss']\n})\nexport class ChildsComponent {\n\n  constructor() {\n  }\n\n  //创建标记的数据\n  locations = [\n    {lat: -31.56391, lng: 147.154312,},\n    {lat: -33.718234, lng: 150.363181},\n    {lat: -33.727111, lng: 150.371124},\n    {lat: -33.848588, lng: 151.209834},\n    {lat: -33.851702, lng: 151.216968},\n    {lat: -34.671264, lng: 150.863657},\n    {lat: -35.304724, lng: 148.662905},\n    {lat: -36.817685, lng: 175.699196},\n    {lat: -36.828611, lng: 175.790222},\n  ];\n  uluru = {lat: -25.344, lng: 131.036};\n  map: any;  //创建地图\n  markers: any; //创建标记\n  flightPaths: any; //多边形\n  infoWindow: any; //窗口对象\n  uploadFile: any; //上传文件对象\n  //初始化地图\n  newMap(value) {\n    var divMap = document.querySelector('#map');\n    var that = this;\n    //创建一个地图对象\n    this.map = new google.maps.Map(document.querySelector('#map'), {\n      zoom: 5,  //这是显示地图的缩放，缩放的值越高，地图就越清晰\n      center: value,  //这是地图的中心点，让地图显示在我们选中的区域\n    })\n  }\n  //点击鼠标创建创建标记\n  newMarker() {\n    var that = this\n    that.markers = that.locations.map((location, i) => {\n      return new google.maps.Marker({\n        position: location,\n        map: that.map,\n        title: `${i}`,\n        label: `${i + 1}`\n      })\n    })\n  }\n\n  //改变中心点\n  changeCenter(value) {\n    this.map.setCenter({\n      lat: value.lat,\n      lng: value.lng\n    })\n  }\n  //删除标记\n  deleteMarker() {\n    this.markers.map((item) => {\n      item.setMap(null)\n    })\n  }\n  //划线操作，根据我们得到的数据 Polyline绘制折线\n  painImg() {\n    var that = this;\n    const flightpath = new google.maps.Polyline({\n      path: that.locations, //这是路线的坐标点\n      geodesic: true,\n      strokeColor: 'yellow',\n      strokeOpacity: 0.5,\n      strokeWeight: 2\n    })\n    this.deleteMarker()\n    flightpath.setMap(that.map);\n  }\n  //绘制多边形的函数\n  painMoreImg() {\n    //flightpaths相当于是我们绘制了一个多边形，如果我们想在地图上展示它，我们就需要把它放到地图上\n    this.flightPaths = new google.maps.Polygon({\n      paths: this.locations, //这是指定多边形的路径\n      // strokeColor: '#f0f', //绘制多边形线条的颜色\n      // strokeOpacity: .6, //绘制多边形线条的透明度\n      // // strokeWeight: 2,  //绘制线条的厚度\n      // // fillColor: '#0ff', //填充颜色\n      // fillOpacity: .6, //填充颜色的透明度\n    })\n    this.flightPaths.setMap(this.map)\n    console.log(this.flightPaths.getPath().getAt(2).toString())\n  }\n\n  changeColor() {\n    this.flightPaths.setOptions({\n      fillColor: 'red'\n    });\n    console.log(1)\n    console.log(this.flightPaths.fillColor)\n  }\n\n  importData() {\n  }\n\n  //在地图上生成一个infoWindow\n  producetInfoWindow() {\n    alert(1)\n    let infoWindow = new google.maps.InfoWindow({\n      content: 'hello google'\n    })\n    const marker = new google.maps.Marker({\n      position: this.uluru,\n      map: this.map,\n    })\n    infoWindow.open(this.map, marker)\n  }\n  //导入数据生成的多边形\n  Ploygonpain(value){\n    let that = this;\n    //导入的数据，被转换为geoJSON在转换为坐标点，再到这的生成多边形 Ploygon\n    let ployGon = new google.maps.Polygon({\n      paths:value,\n      strokeColor:'red',\n      strokeOpacity:.6,\n      strokeWeight:2,\n      fillColor:'red',\n    })\n\n    ployGon.setMap(that.map)\n  }\n  // twoMap(value){\n  //   let map = new google.maps.Map(document.getElementById('app'),{\n  //     center:{lat: -25.344, lng: 131.036},\n  //     zoom:4,\n  //   })\n  //   let polygon = new google.maps.Polygon({\n  //       paths:value,\n  //       fillColor:'red',\n  //       strokeColor:'yellow'\n  //   })\n  //   polygon.setMap(map)\n  //   polygon.addListener('click',(event)=>{\n  //     console.log(event.latLng.lat(),event.latLng.lng())\n  //   })\n  // }\n  //使用h5自带的方法 fileRead把shapfile解析成二进制，然后转为Geojson文件\n  changShap() {\n    console.log(this)\n    let that = this;\n    let reader = new FileReader(); //实例化一个reader对象，对shapefile文件进行读取\n    reader.readAsArrayBuffer(this.uploadFile.files[0]); //解析我上传的文件\n    reader.onerror = function () {\n      console.log('解析出错了')\n    }\n    reader.onloadstart = function () {\n      console.log('解析开始')\n    }\n    reader.onprogress = function () {\n      console.log('解析正在加载')\n    }\n    reader.onload = function () {\n      var fileData = this.result; //fileData就是我们读取到的二进制文件\n      //2.我们通过引入shapfile文件进行解析二进制那个转换为GeoJson文件\n      let shapfile = require('shapefile');\n\n      shapfile.read(fileData).then(geoJson => {\n        console.log(geoJson)\n        // const geoFeatures = that.convertToFeatures(geoJson);//对geoJSON对象数据进行处理\n        // const mapData = new google.maps.Data();  //创建google map数据层\n        // // console.log(geoFeatures)\n        // //  把数据显示在数据层上\n        // mapData.addGeoJson({  //返回一个数组 parsed json  序列化\n        //   type: 'FeatureCollection',\n        //   features: geoFeatures\n        // });\n        // console.log(mapData)\n        // mapData.setMap(that.map);  //把数据层显示在地图上\n        //设置地图上的数据层的样式\n        // mapData.setStyle({\n        //   fillColor:'yellow',\n        //   strokeWeight:2,\n        //   strokeColor:'red'\n        // })\n        // return;\n        //features  特征\n        //geometry  几何\n        //coordinates  坐标\n        const eqfeed_callback = function (geoJson) {\n          for (let i = 0; i <geoJson.features.length; i++) {\n            let arr:any[] = [] //MultiPolygon多变型的数组 一个feature就是一个数组\n            const coords = geoJson.features[i].geometry.coordinates; //得到一个数组\n            let type = coords.length;  //geoJson.features[i].geometry.type;  //得到当前几何的类型是什么，geoJSON的对象类型可以是point ploygon lineString\n            if(type !== 1 ){\n              console.log(coords.length)\n              //解析MultiPolygon的多边形的数据\n              if(coords[0].length === 1){\n                for (let j = 0; j < coords.length; j++) {  //便利coords里面的数组\n                  let arr1:any[] = []\n                  for (let h = 0; h < coords[j].length; h++) {\n                    for (let k = 0; k < coords[j][h].length; k++) {\n                      let str = new Latlng();\n                      str.lat = coords[j][h][k][1];\n                      str.lng = coords[j][h][k][0];\n                      arr1.push(str)\n                    }\n                  }\n                  arr.push(arr1)\n                }\n                that.Ploygonpain(arr)\n              // }else if(coords[0].length !==1){\n              //   let MulityPolygon:any[] = [] //Polygon多变型的数组 一个feature就是一个数组 下面是对polygon的坐标解析\n              //   for (let j=0;j<coords.length;j++){\n              //     for(let h=0;h<coords[j].length;h++) {\n              //       let str = new Latlng(); //生成坐标点\n              //       str.lat = coords[j][h][1];\n              //       str.lng = coords[j][h][0];\n              //       MulityPolygon.push(str);\n              //     }\n              //   };\n              //   that.Ploygonpain(MulityPolygon)\n              }\n            }\n            else if(type === 1){\n              let arr12:any[] = []\n              //解析Ploygon的数据\n              let arrMulity:any[] = [] //Polygon多变型的数组 一个feature就是一个数组 下面是对polygon的坐标解析\n              for (let j=0;j<coords.length;j++){\n                  for(let h=0;h<coords[j].length;h++) {\n                      let str = new Latlng(); //生成坐标点\n                      str.lat = coords[j][h][1];\n                      str.lng = coords[j][h][0];\n                      arrMulity.push(str);\n                  }\n                };\n              // that.Ploygonpain(arrMulity)\n            }\n\n          }\n        }\n        eqfeed_callback(geoJson)\n      })\n    }\n  }\n\n  ngAfterViewInit(): void {\n    this.newMap(this.uluru)\n    this.uploadFile = document.getElementById('uploadFile');\n  }\n\n  convertToFeatures(data: any){\n    // Google map API is only support Feature and FeatureCollection.\n    let geoFeatures = [];\n\n    if (Array.isArray(data)) {\n      data.forEach((item) => {\n        geoFeatures = geoFeatures.concat(this.convertToFeatures(item));\n      });\n    } else {\n      //进行判断，判断geoJson数据里面的类型时features 还是 featuresCollection 还是GeometryCollection\n      switch (data.type) {\n        case 'FeatureCollection':\n          geoFeatures = data.features;\n          break;\n        case 'Feature':\n          geoFeatures.push(data);\n          break;\n        case 'GeometryCollection':    //返回一个\n          geoFeatures = data.geometries.map((item) => {\n            return {\n              type: 'Feature',\n              properties: {},\n              geometry: item, //几何类型\n            };\n          });\n          break;\n        default:\n          geoFeatures.push({\n            type: 'Feature',\n            properties: {},\n            geometry: data\n          });\n      }\n    }\n\n    return geoFeatures;\n  }\n\n}\n","<h3>google地图</h3>\n<div id=\"map\"></div>\n\n<ul>\n  <li *ngFor=\"let item of locations\" (click)=\"changeCenter(item)\">{{item}}</li>\n</ul>\n<input type=\"file\" id=\"uploadFile\" (change)=\"changShap()\"> 上传文件\n<button (click)=\"newMarker()\">创建标记</button>\n<button (click) ='deleteMarker()'>删除标记</button>\n<button (click)=\"painImg()\">绘图</button>\n<button (click)=\"painMoreImg()\">绘制多边形</button>\n<button (click)=\"changeColor()\">改变多边形的颜色</button>\n<button (click)=\"importData()\">导入数据</button>\n<button (click)=\"producetInfoWindow()\">生成一个infoWindow</button>\n<div id=\"app\" style=\"width:800px;height: 800px\"></div>\n<!--<button (click)=\"changeCenter()\">改变中心点</button>-->\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}